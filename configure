#! /usr/bin/env node
/* vim:set ft=javascript : */
/*
 * Nodelint [VERSION]
 * [DATE]
 * A fork of tav's nodelint (http://github.com/tav/nodelint)
 * Corey Hart @ http://www.codenothing.com
 */
var sys = require('sys'),
	fs = require('fs'),
	path = require('path'),
	dist = __dirname + '/dist/',
	rdash = /^--/,
	marker = 0,
	normalize = { jslint: true, prefix: true };
	config = {
		jslint: null,
		prefix: process.installPrefix,
		blocklibs: false
	};


// Creates the directory if it doesn't exist
function mkdir( dir, callback ) {
	path.exists( dir, function( exists ) {
		if ( exists ) {
			callback();
		}
		else {
			fs.mkdir( dir, 0755, function( e ) {
				if ( e ) {
					sys.error( e );
					process.exit( 1 );
				}

				callback();
			});
		}
	});
}


// Set options
process.argv.forEach(function( arg ) {
	var parts = arg.replace( rdash, '' ).split('='), name = parts[ 0 ], value = parts[ 1 ];

	if ( ! name || ! rdash.exec( arg ) ) {
		return;
	}

	// Set the configuration value
	config[ name ] = normalize[ name ] && value ? path.normalize( value.replace( /^\~\//, process.env.HOME + '/' ) ) :
		arg.indexOf( '=' ) > -1 ? value :
		true;
});


// Store configuration
mkdir( dist, function(){
	fs.writeFile( dist + '.config', JSON.stringify( config ), 'utf8', function( e ) {
		if ( e ) {
			sys.error( e );
			process.exit( 1 );
		}
	});
});
